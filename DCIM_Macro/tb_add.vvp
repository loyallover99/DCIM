#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "D:\iverilog\lib\ivl\system.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\va_math.vpi";
S_0000026bfd6dbb90 .scope module, "tb_add" "tb_add" 2 3;
 .timescale -9 -12;
P_0000026bfd5df6a0 .param/l "width" 1 2 6, +C4<00000000000000000000000000001100>;
v0000026bfd656e10_0 .var "a", 11 0;
v0000026bfd6576d0_0 .var "b", 11 0;
v0000026bfd656eb0_0 .var/i "signed_errors", 31 0;
v0000026bfd656f50_0 .net "sum", 12 0, L_0000026bfd657130;  1 drivers
v0000026bfd657c70_0 .var "sus", 0 0;
v0000026bfd657450_0 .var/i "unsigned_errors", 31 0;
S_0000026bfd5d8c00 .scope module, "uut" "add" 2 17, 3 1 0, S_0000026bfd6dbb90;
 .timescale 0 0;
    .port_info 0 /INPUT 12 "a";
    .port_info 1 /INPUT 12 "b";
    .port_info 2 /INPUT 1 "sus";
    .port_info 3 /OUTPUT 13 "sum";
P_0000026bfd5df720 .param/l "width" 0 3 2, +C4<00000000000000000000000000001100>;
v0000026bfd5b3290_0 .net *"_ivl_1", 0 0, L_0000026bfd6578b0;  1 drivers
v0000026bfd5b36e0_0 .net *"_ivl_11", 0 0, L_0000026bfd657770;  1 drivers
v0000026bfd5e4f30_0 .net *"_ivl_12", 12 0, L_0000026bfd6579f0;  1 drivers
L_0000026bfda200d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0000026bfd5dc930_0 .net/2u *"_ivl_14", 0 0, L_0000026bfda200d0;  1 drivers
v0000026bfd5d6a80_0 .net *"_ivl_16", 12 0, L_0000026bfd657a90;  1 drivers
v0000026bfd5d6b20_0 .net *"_ivl_2", 12 0, L_0000026bfd657310;  1 drivers
L_0000026bfda20088 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0000026bfd5da490_0 .net/2u *"_ivl_4", 0 0, L_0000026bfda20088;  1 drivers
v0000026bfd5da530_0 .net *"_ivl_6", 12 0, L_0000026bfd657090;  1 drivers
v0000026bfd5da5d0_0 .net "a", 11 0, v0000026bfd656e10_0;  1 drivers
v0000026bfd5dbd80_0 .net "a_signed", 12 0, L_0000026bfd657950;  1 drivers
v0000026bfd5dbe20_0 .net "b", 11 0, v0000026bfd6576d0_0;  1 drivers
v0000026bfd6571d0_0 .net "b_signed", 12 0, L_0000026bfd657810;  1 drivers
v0000026bfd657d10_0 .net "sum", 12 0, L_0000026bfd657130;  alias, 1 drivers
v0000026bfd656ff0_0 .net "sus", 0 0, v0000026bfd657c70_0;  1 drivers
L_0000026bfd6578b0 .part v0000026bfd656e10_0, 11, 1;
L_0000026bfd657310 .concat [ 12 1 0 0], v0000026bfd656e10_0, L_0000026bfd6578b0;
L_0000026bfd657090 .concat [ 12 1 0 0], v0000026bfd656e10_0, L_0000026bfda20088;
L_0000026bfd657950 .functor MUXZ 13, L_0000026bfd657090, L_0000026bfd657310, v0000026bfd657c70_0, C4<>;
L_0000026bfd657770 .part v0000026bfd6576d0_0, 11, 1;
L_0000026bfd6579f0 .concat [ 12 1 0 0], v0000026bfd6576d0_0, L_0000026bfd657770;
L_0000026bfd657a90 .concat [ 12 1 0 0], v0000026bfd6576d0_0, L_0000026bfda200d0;
L_0000026bfd657810 .functor MUXZ 13, L_0000026bfd657a90, L_0000026bfd6579f0, v0000026bfd657c70_0, C4<>;
L_0000026bfd657130 .arith/sum 13, L_0000026bfd657950, L_0000026bfd657810;
    .scope S_0000026bfd6dbb90;
T_0 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000026bfd657450_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %end;
    .thread T_0;
    .scope S_0000026bfd6dbb90;
T_1 ;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000026bfd657c70_0, 0, 1;
    %vpi_call 2 33 "$dumpfile", "tb_add.vcd" {0 0 0};
    %vpi_call 2 34 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000026bfd6dbb90 {0 0 0};
    %vpi_call 2 37 "$display", "\012--- Test Case 1: Unsigned Addition (sus = 0) ---" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000026bfd657c70_0, 0, 1;
    %pushi/vec4 10, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 20, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %vpi_call 2 42 "$display", "Unsigned: %d + %d = %d", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0 {0 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 30, 0, 13;
    %jmp/0xz  T_1.0, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd657450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd657450_0, 0, 32;
    %vpi_call 2 45 "$display", "  ERROR: Expected 30" {0 0 0};
T_1.0 ;
    %pushi/vec4 4095, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 1, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %vpi_call 2 50 "$display", "Unsigned: %d + %d = %d (overflow)", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0 {0 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 4096, 0, 13;
    %jmp/0xz  T_1.2, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd657450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd657450_0, 0, 32;
    %vpi_call 2 53 "$display", "  ERROR: Expected 4096" {0 0 0};
T_1.2 ;
    %pushi/vec4 4095, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 4095, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %vpi_call 2 58 "$display", "Unsigned: %h + %h = %h (max values)", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0 {0 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 8190, 0, 13;
    %jmp/0xz  T_1.4, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd657450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd657450_0, 0, 32;
    %vpi_call 2 61 "$display", "  ERROR: Expected 1FFE" {0 0 0};
T_1.4 ;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %vpi_call 2 66 "$display", "Unsigned: %h + %h = %h (zero values)", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0 {0 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 0, 0, 13;
    %jmp/0xz  T_1.6, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd657450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd657450_0, 0, 32;
    %vpi_call 2 69 "$display", "  ERROR: Expected 0" {0 0 0};
T_1.6 ;
    %vpi_call 2 73 "$display", "\012--- Test Case 2: Signed Addition (sus = 1) ---" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000026bfd657c70_0, 0, 1;
    %pushi/vec4 10, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 20, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %vpi_call 2 78 "$display", "Signed: %d + %d = %d", S<2,vec4,s12>, S<1,vec4,s12>, S<0,vec4,s13> {3 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 30, 0, 13;
    %jmp/0xz  T_1.8, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 81 "$display", "  ERROR: Expected 30" {0 0 0};
T_1.8 ;
    %pushi/vec4 4086, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 20, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %vpi_call 2 86 "$display", "Signed: %d + %d = %d", S<2,vec4,s12>, S<1,vec4,s12>, S<0,vec4,s13> {3 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 10, 0, 13;
    %jmp/0xz  T_1.10, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 89 "$display", "  ERROR: Expected 10" {0 0 0};
T_1.10 ;
    %pushi/vec4 10, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 4076, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %vpi_call 2 94 "$display", "Signed: %d + %d = %d", S<2,vec4,s12>, S<1,vec4,s12>, S<0,vec4,s13> {3 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 8182, 0, 13;
    %jmp/0xz  T_1.12, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 97 "$display", "  ERROR: Expected -10" {0 0 0};
T_1.12 ;
    %pushi/vec4 4086, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 4076, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %vpi_call 2 102 "$display", "Signed: %d + %d = %d", S<2,vec4,s12>, S<1,vec4,s12>, S<0,vec4,s13> {3 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 8162, 0, 13;
    %jmp/0xz  T_1.14, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 105 "$display", "  ERROR: Expected -30" {0 0 0};
T_1.14 ;
    %pushi/vec4 2047, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 1, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %vpi_call 2 110 "$display", "Signed: %d + %d = %d (pos overflow)", S<2,vec4,s12>, S<1,vec4,s12>, S<0,vec4,s13> {3 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 2048, 0, 13;
    %jmp/0xz  T_1.16, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 113 "$display", "  ERROR: Expected 2048" {0 0 0};
T_1.16 ;
    %pushi/vec4 2048, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 4095, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %vpi_call 2 118 "$display", "Signed: %d + %d = %d (neg overflow)", S<2,vec4,s12>, S<1,vec4,s12>, S<0,vec4,s13> {3 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 6143, 0, 13;
    %jmp/0xz  T_1.18, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 121 "$display", "  ERROR: Expected -2049" {0 0 0};
T_1.18 ;
    %pushi/vec4 2047, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 2047, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %vpi_call 2 126 "$display", "Signed: %h + %h = %h (max pos)", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0 {0 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 4094, 0, 13;
    %jmp/0xz  T_1.20, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 129 "$display", "  ERROR: Expected 0FFE" {0 0 0};
T_1.20 ;
    %pushi/vec4 2048, 0, 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %pushi/vec4 2048, 0, 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %vpi_call 2 134 "$display", "Signed: %h + %h = %h (max neg)", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0 {0 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %cmpi/ne 4096, 0, 13;
    %jmp/0xz  T_1.22, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 137 "$display", "  ERROR: Expected 1000" {0 0 0};
T_1.22 ;
    %vpi_call 2 141 "$display", "\012--- Test Case 3: Random Unsigned Addition ---" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000026bfd657c70_0, 0, 1;
    %pushi/vec4 5, 0, 32;
T_1.24 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_1.25, 5;
    %jmp/1 T_1.25, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %vpi_func 2 144 "$random" 32 {0 0 0};
    %pad/s 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %vpi_func 2 145 "$random" 32 {0 0 0};
    %pad/s 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %add;
    %vpi_call 2 147 "$display", "Random Unsigned: %d + %d = %d (expected %d)", v0000026bfd656e10_0, v0000026bfd6576d0_0, v0000026bfd656f50_0, S<0,vec4,u12> {1 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %load/vec4 v0000026bfd656e10_0;
    %pad/u 13;
    %load/vec4 v0000026bfd6576d0_0;
    %pad/u 13;
    %add;
    %cmp/ne;
    %jmp/0xz  T_1.26, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd657450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd657450_0, 0, 32;
    %vpi_call 2 151 "$display", "  ERROR: Mismatch detected" {0 0 0};
T_1.26 ;
    %jmp T_1.24;
T_1.25 ;
    %pop/vec4 1;
    %vpi_call 2 156 "$display", "\012--- Test Case 4: Random Signed Addition ---" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000026bfd657c70_0, 0, 1;
    %pushi/vec4 5, 0, 32;
T_1.28 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_1.29, 5;
    %jmp/1 T_1.29, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %vpi_func 2 159 "$random" 32 {0 0 0};
    %pad/s 12;
    %store/vec4 v0000026bfd656e10_0, 0, 12;
    %vpi_func 2 160 "$random" 32 {0 0 0};
    %pad/s 12;
    %store/vec4 v0000026bfd6576d0_0, 0, 12;
    %delay 10000, 0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %load/vec4 v0000026bfd656f50_0;
    %load/vec4 v0000026bfd656e10_0;
    %load/vec4 v0000026bfd6576d0_0;
    %add;
    %vpi_call 2 162 "$display", "Random Signed: %d + %d = %d (expected %d)", S<3,vec4,s12>, S<2,vec4,s12>, S<1,vec4,s13>, S<0,vec4,s12> {4 0 0};
    %load/vec4 v0000026bfd656f50_0;
    %load/vec4 v0000026bfd656e10_0;
    %pad/s 13;
    %load/vec4 v0000026bfd6576d0_0;
    %pad/s 13;
    %add;
    %cmp/ne;
    %jmp/0xz  T_1.30, 6;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000026bfd656eb0_0, 0, 32;
    %vpi_call 2 167 "$display", "  ERROR: Mismatch detected" {0 0 0};
T_1.30 ;
    %jmp T_1.28;
T_1.29 ;
    %pop/vec4 1;
    %delay 20000, 0;
    %vpi_call 2 173 "$display", "\012--- Test Summary ---" {0 0 0};
    %vpi_call 2 174 "$display", "Unsigned tests: %0d errors", v0000026bfd657450_0 {0 0 0};
    %vpi_call 2 175 "$display", "Signed tests: %0d errors", v0000026bfd656eb0_0 {0 0 0};
    %load/vec4 v0000026bfd657450_0;
    %cmpi/e 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/0 T_1.34, 4;
    %load/vec4 v0000026bfd656eb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.34;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.32, 8;
    %vpi_call 2 178 "$display", "--- ALL TESTS PASSED ---" {0 0 0};
    %jmp T_1.33;
T_1.32 ;
    %vpi_call 2 180 "$display", "--- TEST FAILURES DETECTED ---" {0 0 0};
T_1.33 ;
    %vpi_call 2 183 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb/tb_add.v";
    "rtl/add.v";
