$date
	Fri Aug 08 19:21:07 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_rwldrv $end
$var wire 8 ! rwlb_row1 [7:0] $end
$var wire 8 " rwlb_row0 [7:0] $end
$var reg 1 # cima $end
$var reg 8 $ expected_row0 [7:0] $end
$var reg 8 % expected_row1 [7:0] $end
$var reg 1 & inwidth $end
$var reg 6 ' sel [5:0] $end
$var reg 192 ( xin0 [191:0] $end
$var integer 32 ) i [31:0] $end
$scope module uut $end
$var wire 1 # cima $end
$var wire 1 & inwidth $end
$var wire 6 * sel [5:0] $end
$var wire 192 + xin0 [191:0] $end
$var reg 8 , rwlb_row0 [7:0] $end
$var reg 8 - rwlb_row1 [7:0] $end
$scope begin RWLDRV_LOGIC $end
$var reg 6 . bit_to_select [5:0] $end
$var reg 8 / selected_bits [7:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1000 0
b0 /
b1011 .
b11111111 -
b11111111 ,
b111000000000000000000000110000000000000000000000101000000000000000000000100000000000000000000000011000000000000000000000010000000000000000000000001000000000000000000000000 +
b0 *
b1000 )
b111000000000000000000000110000000000000000000000101000000000000000000000100000000000000000000000011000000000000000000000010000000000000000000000001000000000000000000000000 (
b0 '
0&
bx %
bx $
0#
b11111111 "
b11111111 !
$end
#20000
b1000 0
b1010 .
b1 '
b1 *
b0 %
b10101010 $
b1000 )
#30000
b1000 0
b1001 .
b10 '
b10 *
b11001100 $
b1000 )
#40000
b1000 0
b1000 .
b11 '
b11 *
b11110000 $
b1000 )
#50000
b1000 0
b111 .
b100 '
b100 *
b0 $
b1000 )
#60000
b1000 0
b110 .
b101 '
b101 *
b1000 )
#70000
b1000 0
b101 .
b110 '
b110 *
b1000 )
#80000
b1000 0
b100 .
b111 '
b111 *
b1000 )
#90000
b1000 0
b11 .
b1000 '
b1000 *
b1000 )
#100000
b1111 "
b1111 ,
b11110000 /
b1000 0
b10 .
b1001 '
b1001 *
b1000 )
#110000
b110011 "
b110011 ,
b11001100 /
b1000 0
b1 .
b1010 '
b1010 *
b1000 )
#120000
b1010101 "
b1010101 ,
b10101010 /
b1000 0
b0 .
b1011 '
b1011 *
b1000 )
#130000
b11111111 "
b11111111 ,
b0 /
b1000 0
b1011 .
1#
b0 '
b0 *
b1000 )
#140000
b1000 0
b1010 .
b1 '
b1 *
b10101010 %
b1000 )
#150000
b1000 0
b1001 .
b10 '
b10 *
b11001100 %
b1000 )
#160000
b1000 0
b1000 .
b11 '
b11 *
b11110000 %
b1000 )
#170000
b1000 0
b111 .
b100 '
b100 *
b0 %
b1000 )
#180000
b1000 0
b110 .
b101 '
b101 *
b1000 )
#190000
b1000 0
b101 .
b110 '
b110 *
b1000 )
#200000
b1000 0
b100 .
b111 '
b111 *
b1000 )
#210000
b1000 0
b11 .
b1000 '
b1000 *
b1000 )
#220000
b1111 !
b1111 -
b11110000 /
b1000 0
b10 .
b1001 '
b1001 *
b1000 )
#230000
b110011 !
b110011 -
b11001100 /
b1000 0
b1 .
b1010 '
b1010 *
b1000 )
#240000
b1010101 !
b1010101 -
b10101010 /
b1000 0
b0 .
b1011 '
b1011 *
b1000 )
#250000
b11111111 !
b11111111 -
b0 /
b1000 0
b10111 .
0#
1&
b0 '
b0 *
b1000 )
#260000
b1000 0
b10110 .
b1 '
b1 *
b10101010 $
b1000 )
#270000
b1000 0
b10101 .
b10 '
b10 *
b11001100 $
b1000 )
#280000
b1000 0
b10100 .
b11 '
b11 *
b11110000 $
b1000 )
#290000
b1000 0
b10011 .
b100 '
b100 *
b0 $
b1000 )
#300000
b1000 0
b10010 .
b101 '
b101 *
b1000 )
#310000
b1000 0
b10001 .
b110 '
b110 *
b1000 )
#320000
b1000 0
b10000 .
b111 '
b111 *
b1000 )
#330000
b1000 0
b1111 .
b1000 '
b1000 *
b1000 )
#340000
b1000 0
b1110 .
b1001 '
b1001 *
b1000 )
#350000
b1000 0
b1101 .
b1010 '
b1010 *
b1000 )
#360000
b1000 0
b1100 .
b1011 '
b1011 *
b1000 )
#370000
b1000 0
b1011 .
b1100 '
b1100 *
b1000 )
#380000
b1000 0
b1010 .
b1101 '
b1101 *
b1000 )
#390000
b1000 0
b1001 .
b1110 '
b1110 *
b1000 )
#400000
b1000 0
b1000 .
b1111 '
b1111 *
b1000 )
#410000
b1000 0
b111 .
b10000 '
b10000 *
b1000 )
#420000
b1000 0
b110 .
b10001 '
b10001 *
b1000 )
#430000
b1000 0
b101 .
b10010 '
b10010 *
b1000 )
#440000
b1000 0
b100 .
b10011 '
b10011 *
b1000 )
#450000
b1000 0
b11 .
b10100 '
b10100 *
b1000 )
#460000
b1111 "
b1111 ,
b11110000 /
b1000 0
b10 .
b10101 '
b10101 *
b1000 )
#470000
b110011 "
b110011 ,
b11001100 /
b1000 0
b1 .
b10110 '
b10110 *
b1000 )
#480000
b1010101 "
b1010101 ,
b10101010 /
b1000 0
b0 .
b10111 '
b10111 *
b1000 )
#490000
b11111111 "
b11111111 ,
b0 /
b1000 0
b10111 .
1#
b0 '
b0 *
b1000 )
#500000
b1000 0
b10110 .
b1 '
b1 *
b10101010 %
b1000 )
#510000
b1000 0
b10101 .
b10 '
b10 *
b11001100 %
b1000 )
#520000
b1000 0
b10100 .
b11 '
b11 *
b11110000 %
b1000 )
#530000
b1000 0
b10011 .
b100 '
b100 *
b0 %
b1000 )
#540000
b1000 0
b10010 .
b101 '
b101 *
b1000 )
#550000
b1000 0
b10001 .
b110 '
b110 *
b1000 )
#560000
b1000 0
b10000 .
b111 '
b111 *
b1000 )
#570000
b1000 0
b1111 .
b1000 '
b1000 *
b1000 )
#580000
b1000 0
b1110 .
b1001 '
b1001 *
b1000 )
#590000
b1000 0
b1101 .
b1010 '
b1010 *
b1000 )
#600000
b1000 0
b1100 .
b1011 '
b1011 *
b1000 )
#610000
b1000 0
b1011 .
b1100 '
b1100 *
b1000 )
#620000
b1000 0
b1010 .
b1101 '
b1101 *
b1000 )
#630000
b1000 0
b1001 .
b1110 '
b1110 *
b1000 )
#640000
b1000 0
b1000 .
b1111 '
b1111 *
b1000 )
#650000
b1000 0
b111 .
b10000 '
b10000 *
b1000 )
#660000
b1000 0
b110 .
b10001 '
b10001 *
b1000 )
#670000
b1000 0
b101 .
b10010 '
b10010 *
b1000 )
#680000
b1000 0
b100 .
b10011 '
b10011 *
b1000 )
#690000
b1000 0
b11 .
b10100 '
b10100 *
b1000 )
#700000
b1111 !
b1111 -
b11110000 /
b1000 0
b10 .
b10101 '
b10101 *
b1000 )
#710000
b110011 !
b110011 -
b11001100 /
b1000 0
b1 .
b10110 '
b10110 *
b1000 )
#720000
b1010101 !
b1010101 -
b10101010 /
b1000 0
b0 .
b10111 '
b10111 *
b1000 )
#730000
b11111111 !
b11111111 -
bx111111 "
bx111111 ,
bx000000 /
b1000 0
b111001 .
0#
b11110 '
b11110 *
b1000 )
#740000
bx0101010 "
bx0101010 ,
bx1010101 /
b1000 0
b11000 .
b111111 '
b111111 *
#770000
